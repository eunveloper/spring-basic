[다양한 의존관계 주입 방법]
의존관계 주입은 크게 4가지 방법이 있다.
1. 생성자 주입
2. 수정자 주입(setter 주입)
3. 필드 주입
4. 일반 메서드 주입

[생성자 주입을 선택해라!]
과거에는 수정자 주입과 필드 주입을 많이 사용했지만,
최근에는 스프링을 포함한 DI 프레임워크 대부분이 생성자 주입을 권장한다. 그 이유는 다음과 같다.
1. 불변
    - 대부분의 의존관계 주입은 한번 일어나면 애플리케이션 종료시점까지 의존관계를 변경할 일이 없다.
        오히려 대부분의 의존관계는 애플리케이션 종료 전까지 변하면 안된다.(불변해야 한다.)
    - 수정자 주입을 사용하면, setXxx 메서드를 public으로 열어두어야 한다.
    - 누군가 실수로 변경할 수 도 있고, 변경하면 안되는 메서드를 열어두는 것은 좋은 설계 방법이 아니다.
    - 생성자 주입은 객체를 생성할 때 딱 1번만 호출되므로 이후에 호출되는 일이 없다. 따라서 불변하게 설계할 수 있다.
2. 누락
    - 프레임워크 없이 순수한 자바 코드를 단위 테스트 하는 경우에
        다음과 같이 수정자 의존관계인 경우 @Autowired 가 프레임워크 안에서 동작할 때는 의존관계가 없으면 오류가 발생하지만,
        지금은 프레임워크 없이 순수한 자바 코드로만 단위 테스트를 수행하고 있다.
    - 쉽게 말하자면 생성자 주입은 컴파일 에러를 내기 때문에 좀더 에러를 보기 쉽고
        그 외에는 런타임 오류가 나기 때문에 초기에 대응하기가 어렵다.
3. final 키워드
    - 생성자 주입을 사용하면 필드에 final 키워드를 사용할 수 있다.
        그래서 생성자에서 혹시라도 값이 설정되지 않는 오류를 컴파일 시점에 막아준다.
        기억하자! 컴파일 오류는 세상에서 가장 빠르고, 좋은 오류다!
    - 수정자 주입을 포함한 나머지 주입 방식은 모두 생성자 이후에 호출되므로, 필드에 final 키워드를 사용할 수 없다.
        오직 생성자 주입 방식만 final 키워드를 사용할 수 있다.